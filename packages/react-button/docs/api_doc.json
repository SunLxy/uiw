{
  "id": 0,
  "name": "@uiw/react-button - v4.21.2",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 3,
      "name": "ButtonProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 141,
          "name": "about",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.about"
          }
        },
        {
          "id": 19,
          "name": "accept",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.accept"
          }
        },
        {
          "id": 20,
          "name": "acceptCharset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.acceptCharset"
          }
        },
        {
          "id": 126,
          "name": "accessKey",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.accessKey"
          }
        },
        {
          "id": 21,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.action"
          }
        },
        {
          "id": 6,
          "name": "active",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 22,
          "name": "allowFullScreen",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.allowFullScreen"
          }
        },
        {
          "id": 23,
          "name": "allowTransparency",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.allowTransparency"
          }
        },
        {
          "id": 24,
          "name": "alt",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.alt"
          }
        },
        {
          "id": 163,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-activedescendant"
          }
        },
        {
          "id": 164,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-atomic"
          }
        },
        {
          "id": 165,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-autocomplete"
          }
        },
        {
          "id": 166,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-busy"
          }
        },
        {
          "id": 167,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-pressed @see aria-selected.\n"
              }
            ]
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-checked"
          }
        },
        {
          "id": 168,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the total number of columns in a table, grid, or treegrid.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-colindex.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-colcount"
          }
        },
        {
          "id": 169,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-colcount @see aria-colspan.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-colindex"
          }
        },
        {
          "id": 170,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-colindex @see aria-rowspan.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-colspan"
          }
        },
        {
          "id": 171,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-owns.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-controls"
          }
        },
        {
          "id": 172,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates the element that represents the current item within a container or set of related elements."
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "date"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "location"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-current"
          }
        },
        {
          "id": 173,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies the element (or elements) that describes the object.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-labelledby\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-describedby"
          }
        },
        {
          "id": 174,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies the element that provides a detailed, extended description for the object.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-describedby.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-details"
          }
        },
        {
          "id": 175,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-hidden @see aria-readonly.\n"
              }
            ]
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-disabled"
          }
        },
        {
          "id": 176,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
            "tags": [
              {
                "tag": "deprecated",
                "text": "in ARIA 1.1\n"
              }
            ]
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-dropeffect"
          }
        },
        {
          "id": 177,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies the element that provides an error message for the object.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-invalid @see aria-describedby.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-errormessage"
          }
        },
        {
          "id": 178,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-expanded"
          }
        },
        {
          "id": 179,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-flowto"
          }
        },
        {
          "id": 180,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
            "tags": [
              {
                "tag": "deprecated",
                "text": "in ARIA 1.1\n"
              }
            ]
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-grabbed"
          }
        },
        {
          "id": 181,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "grid"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-haspopup"
          }
        },
        {
          "id": 182,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates whether the element is exposed to an accessibility API.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-disabled.\n"
              }
            ]
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-hidden"
          }
        },
        {
          "id": 183,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates the entered value does not conform to the format expected by the application.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-errormessage.\n"
              }
            ]
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-invalid"
          }
        },
        {
          "id": 184,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-keyshortcuts"
          }
        },
        {
          "id": 185,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines a string value that labels the current element.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-labelledby.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-label"
          }
        },
        {
          "id": 186,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies the element (or elements) that labels the current element.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-describedby.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-labelledby"
          }
        },
        {
          "id": 187,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the hierarchical level of an element within a structure."
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-level"
          }
        },
        {
          "id": 188,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-live"
          }
        },
        {
          "id": 189,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates whether an element is modal when displayed."
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-modal"
          }
        },
        {
          "id": 190,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-multiline"
          }
        },
        {
          "id": 191,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates that the user may select more than one item from the current selectable descendants."
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-multiselectable"
          }
        },
        {
          "id": 192,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-orientation"
          }
        },
        {
          "id": 193,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-controls.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-owns"
          }
        },
        {
          "id": 194,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-placeholder"
          }
        },
        {
          "id": 195,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-setsize.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-posinset"
          }
        },
        {
          "id": 196,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates the current \"pressed\" state of toggle buttons.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-checked @see aria-selected.\n"
              }
            ]
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-pressed"
          }
        },
        {
          "id": 197,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates that the element is not editable, but is otherwise operable.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-disabled.\n"
              }
            ]
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-readonly"
          }
        },
        {
          "id": 198,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-atomic.\n"
              }
            ]
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-relevant"
          }
        },
        {
          "id": 199,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates that user input is required on the element before a form may be submitted."
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-required"
          }
        },
        {
          "id": 200,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines a human-readable, author-localized description for the role of an element."
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-roledescription"
          }
        },
        {
          "id": 201,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the total number of rows in a table, grid, or treegrid.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-rowindex.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-rowcount"
          }
        },
        {
          "id": 202,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-rowcount @see aria-rowspan.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-rowindex"
          }
        },
        {
          "id": 203,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-rowindex @see aria-colspan.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-rowspan"
          }
        },
        {
          "id": 204,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates the current \"selected\" state of various widgets.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-checked @see aria-pressed.\n"
              }
            ]
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-selected"
          }
        },
        {
          "id": 205,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-posinset.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-setsize"
          }
        },
        {
          "id": 206,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-sort"
          }
        },
        {
          "id": 207,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the maximum allowed value for a range widget."
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-valuemax"
          }
        },
        {
          "id": 208,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the minimum allowed value for a range widget."
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-valuemin"
          }
        },
        {
          "id": 209,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the current value for a range widget.",
            "tags": [
              {
                "tag": "see",
                "text": "aria-valuetext.\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-valuenow"
          }
        },
        {
          "id": 210,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.aria-valuetext"
          }
        },
        {
          "id": 25,
          "name": "as",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.as"
          }
        },
        {
          "id": 26,
          "name": "async",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.async"
          }
        },
        {
          "id": 149,
          "name": "autoCapitalize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.autoCapitalize"
          }
        },
        {
          "id": 27,
          "name": "autoComplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.autoComplete"
          }
        },
        {
          "id": 150,
          "name": "autoCorrect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.autoCorrect"
          }
        },
        {
          "id": 28,
          "name": "autoFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.autoFocus"
          }
        },
        {
          "id": 29,
          "name": "autoPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.autoPlay"
          }
        },
        {
          "id": 151,
          "name": "autoSave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.autoSave"
          }
        },
        {
          "id": 4,
          "name": "basic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 8,
          "name": "block",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 30,
          "name": "capture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "environment"
              },
              {
                "type": "literal",
                "value": "user"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.capture"
          }
        },
        {
          "id": 31,
          "name": "cellPadding",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.cellPadding"
          }
        },
        {
          "id": 32,
          "name": "cellSpacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.cellSpacing"
          }
        },
        {
          "id": 34,
          "name": "challenge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.challenge"
          }
        },
        {
          "id": 33,
          "name": "charSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.charSet"
          }
        },
        {
          "id": 35,
          "name": "checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.checked"
          }
        },
        {
          "id": 211,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react",
            "name": "ReactNode"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.children"
          }
        },
        {
          "id": 36,
          "name": "cite",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.cite"
          }
        },
        {
          "id": 37,
          "name": "classID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.classID"
          }
        },
        {
          "id": 17,
          "name": "className",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IProps.className"
          }
        },
        {
          "id": 39,
          "name": "colSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.colSpan"
          }
        },
        {
          "id": 152,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.color"
          }
        },
        {
          "id": 38,
          "name": "cols",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.cols"
          }
        },
        {
          "id": 40,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.content"
          }
        },
        {
          "id": 127,
          "name": "contentEditable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "qualifiedName": "Booleanish",
                "package": "@types/react",
                "name": "Booleanish"
              },
              {
                "type": "literal",
                "value": "inherit"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.contentEditable"
          }
        },
        {
          "id": 128,
          "name": "contextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.contextMenu"
          }
        },
        {
          "id": 41,
          "name": "controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.controls"
          }
        },
        {
          "id": 42,
          "name": "coords",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.coords"
          }
        },
        {
          "id": 43,
          "name": "crossOrigin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.crossOrigin"
          }
        },
        {
          "id": 212,
          "name": "dangerouslySetInnerHTML",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 213,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 214,
                  "name": "__html",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [214]
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.dangerouslySetInnerHTML"
          }
        },
        {
          "id": 44,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.data"
          }
        },
        {
          "id": 142,
          "name": "datatype",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.datatype"
          }
        },
        {
          "id": 45,
          "name": "dateTime",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.dateTime"
          }
        },
        {
          "id": 46,
          "name": "default",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.default"
          }
        },
        {
          "id": 122,
          "name": "defaultChecked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.defaultChecked"
          }
        },
        {
          "id": 123,
          "name": "defaultValue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.defaultValue"
          }
        },
        {
          "id": 47,
          "name": "defer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.defer"
          }
        },
        {
          "id": 129,
          "name": "dir",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.dir"
          }
        },
        {
          "id": 5,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "overwrites": {
            "type": "reference",
            "name": "Omit.disabled"
          }
        },
        {
          "id": 48,
          "name": "download",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "any"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.download"
          }
        },
        {
          "id": 130,
          "name": "draggable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.draggable"
          }
        },
        {
          "id": 49,
          "name": "encType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.encType"
          }
        },
        {
          "id": 50,
          "name": "form",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.form"
          }
        },
        {
          "id": 51,
          "name": "formAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.formAction"
          }
        },
        {
          "id": 52,
          "name": "formEncType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.formEncType"
          }
        },
        {
          "id": 53,
          "name": "formMethod",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.formMethod"
          }
        },
        {
          "id": 54,
          "name": "formNoValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.formNoValidate"
          }
        },
        {
          "id": 55,
          "name": "formTarget",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.formTarget"
          }
        },
        {
          "id": 56,
          "name": "frameBorder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.frameBorder"
          }
        },
        {
          "id": 57,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.headers"
          }
        },
        {
          "id": 58,
          "name": "height",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.height"
          }
        },
        {
          "id": 131,
          "name": "hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.hidden"
          }
        },
        {
          "id": 59,
          "name": "high",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.high"
          }
        },
        {
          "id": 60,
          "name": "href",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.href"
          }
        },
        {
          "id": 61,
          "name": "hrefLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.hrefLang"
          }
        },
        {
          "id": 62,
          "name": "htmlFor",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.htmlFor"
          }
        },
        {
          "id": 12,
          "name": "htmlType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "button"
              },
              {
                "type": "literal",
                "value": "submit"
              },
              {
                "type": "literal",
                "value": "reset"
              }
            ]
          }
        },
        {
          "id": 63,
          "name": "httpEquiv",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.httpEquiv"
          }
        },
        {
          "id": 9,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "literal",
                "value": "download"
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react",
                        "name": "JSXElementConstructor"
                      }
                    ]
                  }
                ],
                "qualifiedName": "React.ReactElement",
                "package": "@types/react",
                "name": "ReactElement"
              },
              {
                "type": "literal",
                "value": "adobe"
              },
              {
                "type": "literal",
                "value": "alipay"
              },
              {
                "type": "literal",
                "value": "aliwangwang"
              },
              {
                "type": "literal",
                "value": "android-o"
              },
              {
                "type": "literal",
                "value": "android"
              },
              {
                "type": "literal",
                "value": "apple"
              },
              {
                "type": "literal",
                "value": "appstore-o"
              },
              {
                "type": "literal",
                "value": "appstore"
              },
              {
                "type": "literal",
                "value": "area-chart"
              },
              {
                "type": "literal",
                "value": "arrow-down"
              },
              {
                "type": "literal",
                "value": "arrow-left"
              },
              {
                "type": "literal",
                "value": "arrow-right"
              },
              {
                "type": "literal",
                "value": "arrow-up"
              },
              {
                "type": "literal",
                "value": "arrows-alt"
              },
              {
                "type": "literal",
                "value": "asterisk"
              },
              {
                "type": "literal",
                "value": "backward"
              },
              {
                "type": "literal",
                "value": "baidu"
              },
              {
                "type": "literal",
                "value": "bar-chart"
              },
              {
                "type": "literal",
                "value": "barcode"
              },
              {
                "type": "literal",
                "value": "bell"
              },
              {
                "type": "literal",
                "value": "camera-o"
              },
              {
                "type": "literal",
                "value": "caret-down"
              },
              {
                "type": "literal",
                "value": "caret-left"
              },
              {
                "type": "literal",
                "value": "caret-right"
              },
              {
                "type": "literal",
                "value": "caret-up"
              },
              {
                "type": "literal",
                "value": "check-square-o"
              },
              {
                "type": "literal",
                "value": "check-square"
              },
              {
                "type": "literal",
                "value": "check"
              },
              {
                "type": "literal",
                "value": "chrome"
              },
              {
                "type": "literal",
                "value": "circle-check-o"
              },
              {
                "type": "literal",
                "value": "circle-check"
              },
              {
                "type": "literal",
                "value": "circle-close-o"
              },
              {
                "type": "literal",
                "value": "circle-close"
              },
              {
                "type": "literal",
                "value": "circle-o"
              },
              {
                "type": "literal",
                "value": "close-square-o"
              },
              {
                "type": "literal",
                "value": "close-square"
              },
              {
                "type": "literal",
                "value": "close"
              },
              {
                "type": "literal",
                "value": "cloud-download-o"
              },
              {
                "type": "literal",
                "value": "cloud-download"
              },
              {
                "type": "literal",
                "value": "cloud-upload-o"
              },
              {
                "type": "literal",
                "value": "cloud-upload"
              },
              {
                "type": "literal",
                "value": "coffee"
              },
              {
                "type": "literal",
                "value": "component"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "copyright"
              },
              {
                "type": "literal",
                "value": "css3"
              },
              {
                "type": "literal",
                "value": "cut"
              },
              {
                "type": "literal",
                "value": "d-arrow-left"
              },
              {
                "type": "literal",
                "value": "d-arrow-right"
              },
              {
                "type": "literal",
                "value": "d-caret"
              },
              {
                "type": "literal",
                "value": "dashboard"
              },
              {
                "type": "literal",
                "value": "date"
              },
              {
                "type": "literal",
                "value": "delete"
              },
              {
                "type": "literal",
                "value": "dingding"
              },
              {
                "type": "literal",
                "value": "dislike-o"
              },
              {
                "type": "literal",
                "value": "document"
              },
              {
                "type": "literal",
                "value": "dot-chart"
              },
              {
                "type": "literal",
                "value": "down-circle-o"
              },
              {
                "type": "literal",
                "value": "down-circle"
              },
              {
                "type": "literal",
                "value": "down-square-o"
              },
              {
                "type": "literal",
                "value": "down-square"
              },
              {
                "type": "literal",
                "value": "down"
              },
              {
                "type": "literal",
                "value": "edit"
              },
              {
                "type": "literal",
                "value": "enter"
              },
              {
                "type": "literal",
                "value": "environment-o"
              },
              {
                "type": "literal",
                "value": "environment"
              },
              {
                "type": "literal",
                "value": "eye-o"
              },
              {
                "type": "literal",
                "value": "eye"
              },
              {
                "type": "literal",
                "value": "facebook"
              },
              {
                "type": "literal",
                "value": "file-add"
              },
              {
                "type": "literal",
                "value": "file-excel"
              },
              {
                "type": "literal",
                "value": "file-jpg"
              },
              {
                "type": "literal",
                "value": "file-pdf"
              },
              {
                "type": "literal",
                "value": "file-text"
              },
              {
                "type": "literal",
                "value": "file-unknown"
              },
              {
                "type": "literal",
                "value": "filter"
              },
              {
                "type": "literal",
                "value": "firefox"
              },
              {
                "type": "literal",
                "value": "folder-add"
              },
              {
                "type": "literal",
                "value": "folder-open"
              },
              {
                "type": "literal",
                "value": "folder"
              },
              {
                "type": "literal",
                "value": "forward"
              },
              {
                "type": "literal",
                "value": "foursquare"
              },
              {
                "type": "literal",
                "value": "frown-o"
              },
              {
                "type": "literal",
                "value": "frown"
              },
              {
                "type": "literal",
                "value": "github-o"
              },
              {
                "type": "literal",
                "value": "github"
              },
              {
                "type": "literal",
                "value": "global"
              },
              {
                "type": "literal",
                "value": "heart-off"
              },
              {
                "type": "literal",
                "value": "heart-on"
              },
              {
                "type": "literal",
                "value": "home"
              },
              {
                "type": "literal",
                "value": "html5"
              },
              {
                "type": "literal",
                "value": "ie"
              },
              {
                "type": "literal",
                "value": "inbox"
              },
              {
                "type": "literal",
                "value": "information-o"
              },
              {
                "type": "literal",
                "value": "information"
              },
              {
                "type": "literal",
                "value": "laptop"
              },
              {
                "type": "literal",
                "value": "left-circle-o"
              },
              {
                "type": "literal",
                "value": "left-circle"
              },
              {
                "type": "literal",
                "value": "left-square-o"
              },
              {
                "type": "literal",
                "value": "left-square"
              },
              {
                "type": "literal",
                "value": "left"
              },
              {
                "type": "literal",
                "value": "like-o"
              },
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "linkedin"
              },
              {
                "type": "literal",
                "value": "linux"
              },
              {
                "type": "literal",
                "value": "loading"
              },
              {
                "type": "literal",
                "value": "lock"
              },
              {
                "type": "literal",
                "value": "login"
              },
              {
                "type": "literal",
                "value": "logout"
              },
              {
                "type": "literal",
                "value": "mail-o"
              },
              {
                "type": "literal",
                "value": "mail"
              },
              {
                "type": "literal",
                "value": "man"
              },
              {
                "type": "literal",
                "value": "map"
              },
              {
                "type": "literal",
                "value": "meh-o"
              },
              {
                "type": "literal",
                "value": "meh"
              },
              {
                "type": "literal",
                "value": "menu-fold"
              },
              {
                "type": "literal",
                "value": "menu-unfold"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "message"
              },
              {
                "type": "literal",
                "value": "minus-circle-o"
              },
              {
                "type": "literal",
                "value": "minus-circle"
              },
              {
                "type": "literal",
                "value": "minus-square-o"
              },
              {
                "type": "literal",
                "value": "minus-square"
              },
              {
                "type": "literal",
                "value": "minus"
              },
              {
                "type": "literal",
                "value": "mobile"
              },
              {
                "type": "literal",
                "value": "more"
              },
              {
                "type": "literal",
                "value": "notification"
              },
              {
                "type": "literal",
                "value": "opera"
              },
              {
                "type": "literal",
                "value": "paper-clip"
              },
              {
                "type": "literal",
                "value": "pause-circle-o"
              },
              {
                "type": "literal",
                "value": "pause-circle"
              },
              {
                "type": "literal",
                "value": "pause"
              },
              {
                "type": "literal",
                "value": "pay-circle-o"
              },
              {
                "type": "literal",
                "value": "pay"
              },
              {
                "type": "literal",
                "value": "picasa"
              },
              {
                "type": "literal",
                "value": "picture"
              },
              {
                "type": "literal",
                "value": "pie-chart"
              },
              {
                "type": "literal",
                "value": "pinterest"
              },
              {
                "type": "literal",
                "value": "play-circle-o"
              },
              {
                "type": "literal",
                "value": "play-circle"
              },
              {
                "type": "literal",
                "value": "plus-circle-o"
              },
              {
                "type": "literal",
                "value": "plus-circle"
              },
              {
                "type": "literal",
                "value": "plus-square-o"
              },
              {
                "type": "literal",
                "value": "plus-square"
              },
              {
                "type": "literal",
                "value": "plus"
              },
              {
                "type": "literal",
                "value": "poweroff"
              },
              {
                "type": "literal",
                "value": "printer"
              },
              {
                "type": "literal",
                "value": "qq"
              },
              {
                "type": "literal",
                "value": "qrcode"
              },
              {
                "type": "literal",
                "value": "question-circle-o"
              },
              {
                "type": "literal",
                "value": "question-circle"
              },
              {
                "type": "literal",
                "value": "reddit"
              },
              {
                "type": "literal",
                "value": "reload"
              },
              {
                "type": "literal",
                "value": "right-circle-o"
              },
              {
                "type": "literal",
                "value": "right-circle"
              },
              {
                "type": "literal",
                "value": "right-square-o"
              },
              {
                "type": "literal",
                "value": "right-square"
              },
              {
                "type": "literal",
                "value": "right"
              },
              {
                "type": "literal",
                "value": "rollback"
              },
              {
                "type": "literal",
                "value": "safari"
              },
              {
                "type": "literal",
                "value": "safety"
              },
              {
                "type": "literal",
                "value": "save"
              },
              {
                "type": "literal",
                "value": "search"
              },
              {
                "type": "literal",
                "value": "setting-o"
              },
              {
                "type": "literal",
                "value": "setting"
              },
              {
                "type": "literal",
                "value": "share"
              },
              {
                "type": "literal",
                "value": "shopping-cart"
              },
              {
                "type": "literal",
                "value": "shrink"
              },
              {
                "type": "literal",
                "value": "smile-o"
              },
              {
                "type": "literal",
                "value": "smile"
              },
              {
                "type": "literal",
                "value": "square-o"
              },
              {
                "type": "literal",
                "value": "star-off"
              },
              {
                "type": "literal",
                "value": "star-on"
              },
              {
                "type": "literal",
                "value": "stop-o"
              },
              {
                "type": "literal",
                "value": "stop"
              },
              {
                "type": "literal",
                "value": "swap-left"
              },
              {
                "type": "literal",
                "value": "swap-right"
              },
              {
                "type": "literal",
                "value": "swap"
              },
              {
                "type": "literal",
                "value": "table"
              },
              {
                "type": "literal",
                "value": "tag-o"
              },
              {
                "type": "literal",
                "value": "tag"
              },
              {
                "type": "literal",
                "value": "tags-o"
              },
              {
                "type": "literal",
                "value": "tags"
              },
              {
                "type": "literal",
                "value": "taobao"
              },
              {
                "type": "literal",
                "value": "time-o"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "twitter"
              },
              {
                "type": "literal",
                "value": "uiw"
              },
              {
                "type": "literal",
                "value": "unlock"
              },
              {
                "type": "literal",
                "value": "up-circle-o"
              },
              {
                "type": "literal",
                "value": "up-circle"
              },
              {
                "type": "literal",
                "value": "up-square-o"
              },
              {
                "type": "literal",
                "value": "up-square"
              },
              {
                "type": "literal",
                "value": "up"
              },
              {
                "type": "literal",
                "value": "upload"
              },
              {
                "type": "literal",
                "value": "user-add"
              },
              {
                "type": "literal",
                "value": "user-delete"
              },
              {
                "type": "literal",
                "value": "user"
              },
              {
                "type": "literal",
                "value": "usergroup-add"
              },
              {
                "type": "literal",
                "value": "usergroup-delete"
              },
              {
                "type": "literal",
                "value": "verification"
              },
              {
                "type": "literal",
                "value": "verticle-left"
              },
              {
                "type": "literal",
                "value": "verticle-right"
              },
              {
                "type": "literal",
                "value": "video-camera"
              },
              {
                "type": "literal",
                "value": "warning-o"
              },
              {
                "type": "literal",
                "value": "warning"
              },
              {
                "type": "literal",
                "value": "weibo"
              },
              {
                "type": "literal",
                "value": "weixin"
              },
              {
                "type": "literal",
                "value": "wifi"
              },
              {
                "type": "literal",
                "value": "windows"
              },
              {
                "type": "literal",
                "value": "woman"
              },
              {
                "type": "literal",
                "value": "zoom-in"
              },
              {
                "type": "literal",
                "value": "zoom-out"
              }
            ]
          }
        },
        {
          "id": 132,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.id"
          }
        },
        {
          "id": 143,
          "name": "inlist",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "any"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.inlist"
          }
        },
        {
          "id": 161,
          "name": "inputMode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
            "tags": [
              {
                "tag": "see",
                "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
              }
            ]
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "search"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "tel"
              },
              {
                "type": "literal",
                "value": "url"
              },
              {
                "type": "literal",
                "value": "email"
              },
              {
                "type": "literal",
                "value": "numeric"
              },
              {
                "type": "literal",
                "value": "decimal"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.inputMode"
          }
        },
        {
          "id": 64,
          "name": "integrity",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.integrity"
          }
        },
        {
          "id": 162,
          "name": "is",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
            "tags": [
              {
                "tag": "see",
                "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.is"
          }
        },
        {
          "id": 156,
          "name": "itemID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.itemID"
          }
        },
        {
          "id": 153,
          "name": "itemProp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.itemProp"
          }
        },
        {
          "id": 157,
          "name": "itemRef",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.itemRef"
          }
        },
        {
          "id": 154,
          "name": "itemScope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.itemScope"
          }
        },
        {
          "id": 155,
          "name": "itemType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.itemType"
          }
        },
        {
          "id": 375,
          "name": "key",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "qualifiedName": "React.Key",
                "package": "@types/react",
                "name": "Key"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.key"
          }
        },
        {
          "id": 65,
          "name": "keyParams",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.keyParams"
          }
        },
        {
          "id": 66,
          "name": "keyType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.keyType"
          }
        },
        {
          "id": 67,
          "name": "kind",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.kind"
          }
        },
        {
          "id": 68,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.label"
          }
        },
        {
          "id": 133,
          "name": "lang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.lang"
          }
        },
        {
          "id": 69,
          "name": "list",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.list"
          }
        },
        {
          "id": 7,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 70,
          "name": "loop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.loop"
          }
        },
        {
          "id": 71,
          "name": "low",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.low"
          }
        },
        {
          "id": 72,
          "name": "manifest",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.manifest"
          }
        },
        {
          "id": 73,
          "name": "marginHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.marginHeight"
          }
        },
        {
          "id": 74,
          "name": "marginWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.marginWidth"
          }
        },
        {
          "id": 75,
          "name": "max",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.max"
          }
        },
        {
          "id": 76,
          "name": "maxLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.maxLength"
          }
        },
        {
          "id": 77,
          "name": "media",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.media"
          }
        },
        {
          "id": 78,
          "name": "mediaGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.mediaGroup"
          }
        },
        {
          "id": 79,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.method"
          }
        },
        {
          "id": 80,
          "name": "min",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.min"
          }
        },
        {
          "id": 81,
          "name": "minLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.minLength"
          }
        },
        {
          "id": 82,
          "name": "multiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.multiple"
          }
        },
        {
          "id": 83,
          "name": "muted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.muted"
          }
        },
        {
          "id": 84,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.name"
          }
        },
        {
          "id": 86,
          "name": "noValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.noValidate"
          }
        },
        {
          "id": 85,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.nonce"
          }
        },
        {
          "id": 253,
          "name": "onAbort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAbort"
          }
        },
        {
          "id": 254,
          "name": "onAbortCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAbortCapture"
          }
        },
        {
          "id": 368,
          "name": "onAnimationEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react",
            "name": "AnimationEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAnimationEnd"
          }
        },
        {
          "id": 369,
          "name": "onAnimationEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react",
            "name": "AnimationEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAnimationEndCapture"
          }
        },
        {
          "id": 370,
          "name": "onAnimationIteration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react",
            "name": "AnimationEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAnimationIteration"
          }
        },
        {
          "id": 371,
          "name": "onAnimationIterationCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react",
            "name": "AnimationEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAnimationIterationCapture"
          }
        },
        {
          "id": 366,
          "name": "onAnimationStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react",
            "name": "AnimationEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAnimationStart"
          }
        },
        {
          "id": 367,
          "name": "onAnimationStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react",
            "name": "AnimationEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAnimationStartCapture"
          }
        },
        {
          "id": 297,
          "name": "onAuxClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAuxClick"
          }
        },
        {
          "id": 298,
          "name": "onAuxClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onAuxClickCapture"
          }
        },
        {
          "id": 233,
          "name": "onBeforeInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onBeforeInput"
          }
        },
        {
          "id": 234,
          "name": "onBeforeInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onBeforeInputCapture"
          }
        },
        {
          "id": 229,
          "name": "onBlur",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react",
            "name": "FocusEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onBlur"
          }
        },
        {
          "id": 230,
          "name": "onBlurCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react",
            "name": "FocusEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onBlurCapture"
          }
        },
        {
          "id": 255,
          "name": "onCanPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCanPlay"
          }
        },
        {
          "id": 256,
          "name": "onCanPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCanPlayCapture"
          }
        },
        {
          "id": 257,
          "name": "onCanPlayThrough",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCanPlayThrough"
          }
        },
        {
          "id": 258,
          "name": "onCanPlayThroughCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCanPlayThroughCapture"
          }
        },
        {
          "id": 231,
          "name": "onChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onChange"
          }
        },
        {
          "id": 232,
          "name": "onChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onChangeCapture"
          }
        },
        {
          "id": 299,
          "name": "onClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onClickCapture"
          }
        },
        {
          "id": 221,
          "name": "onCompositionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react",
            "name": "CompositionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCompositionEnd"
          }
        },
        {
          "id": 222,
          "name": "onCompositionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react",
            "name": "CompositionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCompositionEndCapture"
          }
        },
        {
          "id": 223,
          "name": "onCompositionStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react",
            "name": "CompositionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCompositionStart"
          }
        },
        {
          "id": 224,
          "name": "onCompositionStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react",
            "name": "CompositionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCompositionStartCapture"
          }
        },
        {
          "id": 225,
          "name": "onCompositionUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react",
            "name": "CompositionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCompositionUpdate"
          }
        },
        {
          "id": 226,
          "name": "onCompositionUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react",
            "name": "CompositionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCompositionUpdateCapture"
          }
        },
        {
          "id": 300,
          "name": "onContextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onContextMenu"
          }
        },
        {
          "id": 301,
          "name": "onContextMenuCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onContextMenuCapture"
          }
        },
        {
          "id": 215,
          "name": "onCopy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react",
            "name": "ClipboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCopy"
          }
        },
        {
          "id": 216,
          "name": "onCopyCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react",
            "name": "ClipboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCopyCapture"
          }
        },
        {
          "id": 217,
          "name": "onCut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react",
            "name": "ClipboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCut"
          }
        },
        {
          "id": 218,
          "name": "onCutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react",
            "name": "ClipboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onCutCapture"
          }
        },
        {
          "id": 302,
          "name": "onDoubleClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDoubleClick"
          }
        },
        {
          "id": 303,
          "name": "onDoubleClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDoubleClickCapture"
          }
        },
        {
          "id": 304,
          "name": "onDrag",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDrag"
          }
        },
        {
          "id": 305,
          "name": "onDragCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragCapture"
          }
        },
        {
          "id": 306,
          "name": "onDragEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragEnd"
          }
        },
        {
          "id": 307,
          "name": "onDragEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragEndCapture"
          }
        },
        {
          "id": 308,
          "name": "onDragEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragEnter"
          }
        },
        {
          "id": 309,
          "name": "onDragEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragEnterCapture"
          }
        },
        {
          "id": 310,
          "name": "onDragExit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragExit"
          }
        },
        {
          "id": 311,
          "name": "onDragExitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragExitCapture"
          }
        },
        {
          "id": 312,
          "name": "onDragLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragLeave"
          }
        },
        {
          "id": 313,
          "name": "onDragLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragLeaveCapture"
          }
        },
        {
          "id": 314,
          "name": "onDragOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragOver"
          }
        },
        {
          "id": 315,
          "name": "onDragOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragOverCapture"
          }
        },
        {
          "id": 316,
          "name": "onDragStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragStart"
          }
        },
        {
          "id": 317,
          "name": "onDragStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDragStartCapture"
          }
        },
        {
          "id": 318,
          "name": "onDrop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDrop"
          }
        },
        {
          "id": 319,
          "name": "onDropCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react",
            "name": "DragEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDropCapture"
          }
        },
        {
          "id": 259,
          "name": "onDurationChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDurationChange"
          }
        },
        {
          "id": 260,
          "name": "onDurationChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onDurationChangeCapture"
          }
        },
        {
          "id": 261,
          "name": "onEmptied",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onEmptied"
          }
        },
        {
          "id": 262,
          "name": "onEmptiedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onEmptiedCapture"
          }
        },
        {
          "id": 263,
          "name": "onEncrypted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onEncrypted"
          }
        },
        {
          "id": 264,
          "name": "onEncryptedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onEncryptedCapture"
          }
        },
        {
          "id": 265,
          "name": "onEnded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onEnded"
          }
        },
        {
          "id": 266,
          "name": "onEndedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onEndedCapture"
          }
        },
        {
          "id": 245,
          "name": "onError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onError"
          }
        },
        {
          "id": 246,
          "name": "onErrorCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onErrorCapture"
          }
        },
        {
          "id": 227,
          "name": "onFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react",
            "name": "FocusEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onFocus"
          }
        },
        {
          "id": 228,
          "name": "onFocusCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react",
            "name": "FocusEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onFocusCapture"
          }
        },
        {
          "id": 358,
          "name": "onGotPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onGotPointerCapture"
          }
        },
        {
          "id": 359,
          "name": "onGotPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onGotPointerCaptureCapture"
          }
        },
        {
          "id": 235,
          "name": "onInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onInput"
          }
        },
        {
          "id": 236,
          "name": "onInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onInputCapture"
          }
        },
        {
          "id": 241,
          "name": "onInvalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onInvalid"
          }
        },
        {
          "id": 242,
          "name": "onInvalidCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onInvalidCapture"
          }
        },
        {
          "id": 247,
          "name": "onKeyDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react",
            "name": "KeyboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onKeyDown"
          }
        },
        {
          "id": 248,
          "name": "onKeyDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react",
            "name": "KeyboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onKeyDownCapture"
          }
        },
        {
          "id": 249,
          "name": "onKeyPress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "tags": [
              {
                "tag": "deprecated",
                "text": ""
              }
            ]
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react",
            "name": "KeyboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onKeyPress"
          }
        },
        {
          "id": 250,
          "name": "onKeyPressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "tags": [
              {
                "tag": "deprecated",
                "text": ""
              }
            ]
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react",
            "name": "KeyboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onKeyPressCapture"
          }
        },
        {
          "id": 251,
          "name": "onKeyUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react",
            "name": "KeyboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onKeyUp"
          }
        },
        {
          "id": 252,
          "name": "onKeyUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react",
            "name": "KeyboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onKeyUpCapture"
          }
        },
        {
          "id": 243,
          "name": "onLoad",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoad"
          }
        },
        {
          "id": 244,
          "name": "onLoadCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoadCapture"
          }
        },
        {
          "id": 271,
          "name": "onLoadStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoadStart"
          }
        },
        {
          "id": 272,
          "name": "onLoadStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoadStartCapture"
          }
        },
        {
          "id": 267,
          "name": "onLoadedData",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoadedData"
          }
        },
        {
          "id": 268,
          "name": "onLoadedDataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoadedDataCapture"
          }
        },
        {
          "id": 269,
          "name": "onLoadedMetadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoadedMetadata"
          }
        },
        {
          "id": 270,
          "name": "onLoadedMetadataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLoadedMetadataCapture"
          }
        },
        {
          "id": 360,
          "name": "onLostPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLostPointerCapture"
          }
        },
        {
          "id": 361,
          "name": "onLostPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onLostPointerCaptureCapture"
          }
        },
        {
          "id": 320,
          "name": "onMouseDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseDown"
          }
        },
        {
          "id": 321,
          "name": "onMouseDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseDownCapture"
          }
        },
        {
          "id": 322,
          "name": "onMouseEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseEnter"
          }
        },
        {
          "id": 323,
          "name": "onMouseLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseLeave"
          }
        },
        {
          "id": 324,
          "name": "onMouseMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseMove"
          }
        },
        {
          "id": 325,
          "name": "onMouseMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseMoveCapture"
          }
        },
        {
          "id": 326,
          "name": "onMouseOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseOut"
          }
        },
        {
          "id": 327,
          "name": "onMouseOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseOutCapture"
          }
        },
        {
          "id": 328,
          "name": "onMouseOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseOver"
          }
        },
        {
          "id": 329,
          "name": "onMouseOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseOverCapture"
          }
        },
        {
          "id": 330,
          "name": "onMouseUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseUp"
          }
        },
        {
          "id": 331,
          "name": "onMouseUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react",
            "name": "MouseEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onMouseUpCapture"
          }
        },
        {
          "id": 219,
          "name": "onPaste",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react",
            "name": "ClipboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPaste"
          }
        },
        {
          "id": 220,
          "name": "onPasteCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react",
            "name": "ClipboardEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPasteCapture"
          }
        },
        {
          "id": 273,
          "name": "onPause",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPause"
          }
        },
        {
          "id": 274,
          "name": "onPauseCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPauseCapture"
          }
        },
        {
          "id": 275,
          "name": "onPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPlay"
          }
        },
        {
          "id": 276,
          "name": "onPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPlayCapture"
          }
        },
        {
          "id": 277,
          "name": "onPlaying",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPlaying"
          }
        },
        {
          "id": 278,
          "name": "onPlayingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPlayingCapture"
          }
        },
        {
          "id": 348,
          "name": "onPointerCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerCancel"
          }
        },
        {
          "id": 349,
          "name": "onPointerCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerCancelCapture"
          }
        },
        {
          "id": 342,
          "name": "onPointerDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerDown"
          }
        },
        {
          "id": 343,
          "name": "onPointerDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerDownCapture"
          }
        },
        {
          "id": 350,
          "name": "onPointerEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerEnter"
          }
        },
        {
          "id": 351,
          "name": "onPointerEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerEnterCapture"
          }
        },
        {
          "id": 352,
          "name": "onPointerLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerLeave"
          }
        },
        {
          "id": 353,
          "name": "onPointerLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerLeaveCapture"
          }
        },
        {
          "id": 344,
          "name": "onPointerMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerMove"
          }
        },
        {
          "id": 345,
          "name": "onPointerMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerMoveCapture"
          }
        },
        {
          "id": 356,
          "name": "onPointerOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerOut"
          }
        },
        {
          "id": 357,
          "name": "onPointerOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerOutCapture"
          }
        },
        {
          "id": 354,
          "name": "onPointerOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerOver"
          }
        },
        {
          "id": 355,
          "name": "onPointerOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerOverCapture"
          }
        },
        {
          "id": 346,
          "name": "onPointerUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerUp"
          }
        },
        {
          "id": 347,
          "name": "onPointerUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react",
            "name": "PointerEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onPointerUpCapture"
          }
        },
        {
          "id": 279,
          "name": "onProgress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onProgress"
          }
        },
        {
          "id": 280,
          "name": "onProgressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onProgressCapture"
          }
        },
        {
          "id": 281,
          "name": "onRateChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onRateChange"
          }
        },
        {
          "id": 282,
          "name": "onRateChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onRateChangeCapture"
          }
        },
        {
          "id": 237,
          "name": "onReset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onReset"
          }
        },
        {
          "id": 238,
          "name": "onResetCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onResetCapture"
          }
        },
        {
          "id": 362,
          "name": "onScroll",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react",
            "name": "UIEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onScroll"
          }
        },
        {
          "id": 363,
          "name": "onScrollCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react",
            "name": "UIEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onScrollCapture"
          }
        },
        {
          "id": 283,
          "name": "onSeeked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSeeked"
          }
        },
        {
          "id": 284,
          "name": "onSeekedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSeekedCapture"
          }
        },
        {
          "id": 285,
          "name": "onSeeking",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSeeking"
          }
        },
        {
          "id": 286,
          "name": "onSeekingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSeekingCapture"
          }
        },
        {
          "id": 332,
          "name": "onSelect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSelect"
          }
        },
        {
          "id": 333,
          "name": "onSelectCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSelectCapture"
          }
        },
        {
          "id": 287,
          "name": "onStalled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onStalled"
          }
        },
        {
          "id": 288,
          "name": "onStalledCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onStalledCapture"
          }
        },
        {
          "id": 239,
          "name": "onSubmit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSubmit"
          }
        },
        {
          "id": 240,
          "name": "onSubmitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react",
            "name": "FormEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSubmitCapture"
          }
        },
        {
          "id": 289,
          "name": "onSuspend",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSuspend"
          }
        },
        {
          "id": 290,
          "name": "onSuspendCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onSuspendCapture"
          }
        },
        {
          "id": 291,
          "name": "onTimeUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTimeUpdate"
          }
        },
        {
          "id": 292,
          "name": "onTimeUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTimeUpdateCapture"
          }
        },
        {
          "id": 334,
          "name": "onTouchCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchCancel"
          }
        },
        {
          "id": 335,
          "name": "onTouchCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchCancelCapture"
          }
        },
        {
          "id": 336,
          "name": "onTouchEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchEnd"
          }
        },
        {
          "id": 337,
          "name": "onTouchEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchEndCapture"
          }
        },
        {
          "id": 338,
          "name": "onTouchMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchMove"
          }
        },
        {
          "id": 339,
          "name": "onTouchMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchMoveCapture"
          }
        },
        {
          "id": 340,
          "name": "onTouchStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchStart"
          }
        },
        {
          "id": 341,
          "name": "onTouchStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react",
            "name": "TouchEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTouchStartCapture"
          }
        },
        {
          "id": 372,
          "name": "onTransitionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react",
            "name": "TransitionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTransitionEnd"
          }
        },
        {
          "id": 373,
          "name": "onTransitionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react",
            "name": "TransitionEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onTransitionEndCapture"
          }
        },
        {
          "id": 293,
          "name": "onVolumeChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onVolumeChange"
          }
        },
        {
          "id": 294,
          "name": "onVolumeChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onVolumeChangeCapture"
          }
        },
        {
          "id": 295,
          "name": "onWaiting",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onWaiting"
          }
        },
        {
          "id": 296,
          "name": "onWaitingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react",
            "name": "ReactEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onWaitingCapture"
          }
        },
        {
          "id": 364,
          "name": "onWheel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react",
            "name": "WheelEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onWheel"
          }
        },
        {
          "id": 365,
          "name": "onWheelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react",
            "name": "WheelEventHandler"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.onWheelCapture"
          }
        },
        {
          "id": 87,
          "name": "open",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.open"
          }
        },
        {
          "id": 88,
          "name": "optimum",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.optimum"
          }
        },
        {
          "id": 89,
          "name": "pattern",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.pattern"
          }
        },
        {
          "id": 90,
          "name": "placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.placeholder"
          }
        },
        {
          "id": 91,
          "name": "playsInline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.playsInline"
          }
        },
        {
          "id": 92,
          "name": "poster",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.poster"
          }
        },
        {
          "id": 144,
          "name": "prefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.prefix"
          }
        },
        {
          "id": 18,
          "name": "prefixCls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IProps.prefixCls"
          }
        },
        {
          "id": 93,
          "name": "preload",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.preload"
          }
        },
        {
          "id": 145,
          "name": "property",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.property"
          }
        },
        {
          "id": 139,
          "name": "radioGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.radioGroup"
          }
        },
        {
          "id": 94,
          "name": "readOnly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.readOnly"
          }
        },
        {
          "id": 374,
          "name": "ref",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "HTMLButtonElement",
                "package": "typedoc",
                "name": "HTMLButtonElement"
              }
            ],
            "qualifiedName": "React.LegacyRef",
            "package": "@types/react",
            "name": "LegacyRef"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.ref"
          }
        },
        {
          "id": 95,
          "name": "rel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.rel"
          }
        },
        {
          "id": 96,
          "name": "required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.required"
          }
        },
        {
          "id": 146,
          "name": "resource",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.resource"
          }
        },
        {
          "id": 158,
          "name": "results",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.results"
          }
        },
        {
          "id": 97,
          "name": "reversed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.reversed"
          }
        },
        {
          "id": 140,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "qualifiedName": "React.AriaRole",
            "package": "@types/react",
            "name": "AriaRole"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.role"
          }
        },
        {
          "id": 99,
          "name": "rowSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.rowSpan"
          }
        },
        {
          "id": 98,
          "name": "rows",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.rows"
          }
        },
        {
          "id": 100,
          "name": "sandbox",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.sandbox"
          }
        },
        {
          "id": 101,
          "name": "scope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.scope"
          }
        },
        {
          "id": 102,
          "name": "scoped",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.scoped"
          }
        },
        {
          "id": 103,
          "name": "scrolling",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.scrolling"
          }
        },
        {
          "id": 104,
          "name": "seamless",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.seamless"
          }
        },
        {
          "id": 159,
          "name": "security",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.security"
          }
        },
        {
          "id": 105,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.selected"
          }
        },
        {
          "id": 106,
          "name": "shape",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.shape"
          }
        },
        {
          "id": 11,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "id": 2,
            "name": "ButtonSize"
          }
        },
        {
          "id": 107,
          "name": "sizes",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.sizes"
          }
        },
        {
          "id": 134,
          "name": "slot",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.slot"
          }
        },
        {
          "id": 108,
          "name": "span",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.span"
          }
        },
        {
          "id": 135,
          "name": "spellCheck",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "qualifiedName": "Booleanish",
            "package": "@types/react",
            "name": "Booleanish"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.spellCheck"
          }
        },
        {
          "id": 109,
          "name": "src",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.src"
          }
        },
        {
          "id": 110,
          "name": "srcDoc",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.srcDoc"
          }
        },
        {
          "id": 111,
          "name": "srcLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.srcLang"
          }
        },
        {
          "id": 112,
          "name": "srcSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.srcSet"
          }
        },
        {
          "id": 113,
          "name": "start",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.start"
          }
        },
        {
          "id": 114,
          "name": "step",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.step"
          }
        },
        {
          "id": 16,
          "name": "style",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "reference",
            "qualifiedName": "React.CSSProperties",
            "package": "@types/react",
            "name": "CSSProperties"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IProps.style"
          }
        },
        {
          "id": 115,
          "name": "summary",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.summary"
          }
        },
        {
          "id": 124,
          "name": "suppressContentEditableWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.suppressContentEditableWarning"
          }
        },
        {
          "id": 125,
          "name": "suppressHydrationWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.suppressHydrationWarning"
          }
        },
        {
          "id": 136,
          "name": "tabIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.tabIndex"
          }
        },
        {
          "id": 116,
          "name": "target",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.target"
          }
        },
        {
          "id": 137,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.title"
          }
        },
        {
          "id": 138,
          "name": "translate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "yes"
              },
              {
                "type": "literal",
                "value": "no"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.translate"
          }
        },
        {
          "id": 10,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "tags": [
              {
                "tag": "china",
                "text": "Text 类型"
              },
              {
                "tag": "param",
                "text": "number\n类型二",
                "param": "a"
              },
              {
                "tag": "englishtext",
                "text": "type english\n"
              }
            ]
          },
          "type": {
            "type": "reference",
            "id": 1,
            "name": "ButtonType"
          },
          "overwrites": {
            "type": "reference",
            "name": "Omit.type"
          }
        },
        {
          "id": 147,
          "name": "typeof",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.typeof"
          }
        },
        {
          "id": 160,
          "name": "unselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "on"
              },
              {
                "type": "literal",
                "value": "off"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.unselectable"
          }
        },
        {
          "id": 117,
          "name": "useMap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.useMap"
          }
        },
        {
          "id": 118,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.value"
          }
        },
        {
          "id": 148,
          "name": "vocab",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.vocab"
          }
        },
        {
          "id": 119,
          "name": "width",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.width"
          }
        },
        {
          "id": 120,
          "name": "wmode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.wmode"
          }
        },
        {
          "id": 121,
          "name": "wrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.wrap"
          }
        },
        {
          "id": 13,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "signatures": [
            {
              "id": 14,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {},
              "parameters": [
                {
                  "id": 15,
                  "name": "e",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "MouseEvent类型\n"
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "HTMLButtonElement",
                            "package": "typedoc",
                            "name": "HTMLButtonElement"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "MouseEvent",
                            "package": "typedoc",
                            "name": "MouseEvent"
                          }
                        ],
                        "qualifiedName": "React.MouseEvent",
                        "package": "@types/react",
                        "name": "MouseEvent"
                      },
                      {
                        "type": "reference",
                        "qualifiedName": "MouseEvent",
                        "package": "typedoc",
                        "name": "MouseEvent"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "Omit.onClick"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Omit.onClick"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            141, 19, 20, 126, 21, 6, 22, 23, 24, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
            198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 25, 26, 149, 27, 150, 28, 29, 151, 4, 8,
            30, 31, 32, 34, 33, 35, 211, 36, 37, 17, 39, 152, 38, 40, 127, 128, 41, 42, 43, 212, 44, 142, 45, 46, 122,
            123, 47, 129, 5, 48, 130, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 131, 59, 60, 61, 62, 12, 63, 9, 132, 143,
            161, 64, 162, 156, 153, 157, 154, 155, 375, 65, 66, 67, 68, 133, 69, 7, 70, 71, 72, 73, 74, 75, 76, 77, 78,
            79, 80, 81, 82, 83, 84, 86, 85, 253, 254, 368, 369, 370, 371, 366, 367, 297, 298, 233, 234, 229, 230, 255,
            256, 257, 258, 231, 232, 299, 221, 222, 223, 224, 225, 226, 300, 301, 215, 216, 217, 218, 302, 303, 304,
            305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 259, 260, 261, 262, 263, 264,
            265, 266, 245, 246, 227, 228, 358, 359, 235, 236, 241, 242, 247, 248, 249, 250, 251, 252, 243, 244, 271,
            272, 267, 268, 269, 270, 360, 361, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 219, 220,
            273, 274, 275, 276, 277, 278, 348, 349, 342, 343, 350, 351, 352, 353, 344, 345, 356, 357, 354, 355, 346,
            347, 279, 280, 281, 282, 237, 238, 362, 363, 283, 284, 285, 286, 332, 333, 287, 288, 239, 240, 289, 290,
            291, 292, 334, 335, 336, 337, 338, 339, 340, 341, 372, 373, 293, 294, 295, 296, 364, 365, 87, 88, 89, 90,
            91, 92, 144, 18, 93, 145, 139, 94, 374, 95, 96, 146, 158, 97, 140, 99, 98, 100, 101, 102, 103, 104, 159,
            105, 106, 11, 107, 134, 108, 135, 109, 110, 111, 112, 113, 114, 16, 115, 124, 125, 136, 116, 137, 138, 10,
            147, 160, 117, 118, 148, 119, 120, 121
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [13]
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "qualifiedName": "IProps",
          "package": "@uiw/utils",
          "name": "IProps"
        },
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "qualifiedName": "HTMLButtonProps",
              "package": "@uiw/utils",
              "name": "HTMLButtonProps"
            },
            {
              "type": "literal",
              "value": "size"
            }
          ],
          "qualifiedName": "Omit",
          "package": "typedoc",
          "name": "Omit"
        }
      ]
    },
    {
      "id": 2,
      "name": "ButtonSize",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "large"
          },
          {
            "type": "literal",
            "value": "default"
          },
          {
            "type": "literal",
            "value": "small"
          }
        ]
      }
    },
    {
      "id": 1,
      "name": "ButtonType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "primary"
          },
          {
            "type": "literal",
            "value": "success"
          },
          {
            "type": "literal",
            "value": "warning"
          },
          {
            "type": "literal",
            "value": "danger"
          },
          {
            "type": "literal",
            "value": "light"
          },
          {
            "type": "literal",
            "value": "dark"
          },
          {
            "type": "literal",
            "value": "link"
          }
        ]
      }
    },
    {
      "id": 376,
      "name": "default",
      "kind": 32,
      "kindString": "Variable",
      "flags": {},
      "type": {
        "type": "reference",
        "typeArguments": [
          {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 3,
                    "name": "ButtonProps"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "size"
                      },
                      {
                        "type": "literal",
                        "value": "accept"
                      },
                      {
                        "type": "literal",
                        "value": "acceptCharset"
                      },
                      {
                        "type": "literal",
                        "value": "action"
                      },
                      {
                        "type": "literal",
                        "value": "allowFullScreen"
                      },
                      {
                        "type": "literal",
                        "value": "allowTransparency"
                      },
                      {
                        "type": "literal",
                        "value": "alt"
                      },
                      {
                        "type": "literal",
                        "value": "as"
                      },
                      {
                        "type": "literal",
                        "value": "async"
                      },
                      {
                        "type": "literal",
                        "value": "autoComplete"
                      },
                      {
                        "type": "literal",
                        "value": "autoFocus"
                      },
                      {
                        "type": "literal",
                        "value": "autoPlay"
                      },
                      {
                        "type": "literal",
                        "value": "capture"
                      },
                      {
                        "type": "literal",
                        "value": "cellPadding"
                      },
                      {
                        "type": "literal",
                        "value": "cellSpacing"
                      },
                      {
                        "type": "literal",
                        "value": "charSet"
                      },
                      {
                        "type": "literal",
                        "value": "challenge"
                      },
                      {
                        "type": "literal",
                        "value": "checked"
                      },
                      {
                        "type": "literal",
                        "value": "cite"
                      },
                      {
                        "type": "literal",
                        "value": "classID"
                      },
                      {
                        "type": "literal",
                        "value": "cols"
                      },
                      {
                        "type": "literal",
                        "value": "colSpan"
                      },
                      {
                        "type": "literal",
                        "value": "content"
                      },
                      {
                        "type": "literal",
                        "value": "controls"
                      },
                      {
                        "type": "literal",
                        "value": "coords"
                      },
                      {
                        "type": "literal",
                        "value": "crossOrigin"
                      },
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "dateTime"
                      },
                      {
                        "type": "literal",
                        "value": "default"
                      },
                      {
                        "type": "literal",
                        "value": "defer"
                      },
                      {
                        "type": "literal",
                        "value": "disabled"
                      },
                      {
                        "type": "literal",
                        "value": "download"
                      },
                      {
                        "type": "literal",
                        "value": "encType"
                      },
                      {
                        "type": "literal",
                        "value": "form"
                      },
                      {
                        "type": "literal",
                        "value": "formAction"
                      },
                      {
                        "type": "literal",
                        "value": "formEncType"
                      },
                      {
                        "type": "literal",
                        "value": "formMethod"
                      },
                      {
                        "type": "literal",
                        "value": "formNoValidate"
                      },
                      {
                        "type": "literal",
                        "value": "formTarget"
                      },
                      {
                        "type": "literal",
                        "value": "frameBorder"
                      },
                      {
                        "type": "literal",
                        "value": "headers"
                      },
                      {
                        "type": "literal",
                        "value": "height"
                      },
                      {
                        "type": "literal",
                        "value": "high"
                      },
                      {
                        "type": "literal",
                        "value": "href"
                      },
                      {
                        "type": "literal",
                        "value": "hrefLang"
                      },
                      {
                        "type": "literal",
                        "value": "htmlFor"
                      },
                      {
                        "type": "literal",
                        "value": "httpEquiv"
                      },
                      {
                        "type": "literal",
                        "value": "integrity"
                      },
                      {
                        "type": "literal",
                        "value": "keyParams"
                      },
                      {
                        "type": "literal",
                        "value": "keyType"
                      },
                      {
                        "type": "literal",
                        "value": "kind"
                      },
                      {
                        "type": "literal",
                        "value": "label"
                      },
                      {
                        "type": "literal",
                        "value": "list"
                      },
                      {
                        "type": "literal",
                        "value": "loop"
                      },
                      {
                        "type": "literal",
                        "value": "low"
                      },
                      {
                        "type": "literal",
                        "value": "manifest"
                      },
                      {
                        "type": "literal",
                        "value": "marginHeight"
                      },
                      {
                        "type": "literal",
                        "value": "marginWidth"
                      },
                      {
                        "type": "literal",
                        "value": "max"
                      },
                      {
                        "type": "literal",
                        "value": "maxLength"
                      },
                      {
                        "type": "literal",
                        "value": "media"
                      },
                      {
                        "type": "literal",
                        "value": "mediaGroup"
                      },
                      {
                        "type": "literal",
                        "value": "method"
                      },
                      {
                        "type": "literal",
                        "value": "min"
                      },
                      {
                        "type": "literal",
                        "value": "minLength"
                      },
                      {
                        "type": "literal",
                        "value": "multiple"
                      },
                      {
                        "type": "literal",
                        "value": "muted"
                      },
                      {
                        "type": "literal",
                        "value": "name"
                      },
                      {
                        "type": "literal",
                        "value": "nonce"
                      },
                      {
                        "type": "literal",
                        "value": "noValidate"
                      },
                      {
                        "type": "literal",
                        "value": "open"
                      },
                      {
                        "type": "literal",
                        "value": "optimum"
                      },
                      {
                        "type": "literal",
                        "value": "pattern"
                      },
                      {
                        "type": "literal",
                        "value": "placeholder"
                      },
                      {
                        "type": "literal",
                        "value": "playsInline"
                      },
                      {
                        "type": "literal",
                        "value": "poster"
                      },
                      {
                        "type": "literal",
                        "value": "preload"
                      },
                      {
                        "type": "literal",
                        "value": "readOnly"
                      },
                      {
                        "type": "literal",
                        "value": "rel"
                      },
                      {
                        "type": "literal",
                        "value": "required"
                      },
                      {
                        "type": "literal",
                        "value": "reversed"
                      },
                      {
                        "type": "literal",
                        "value": "rows"
                      },
                      {
                        "type": "literal",
                        "value": "rowSpan"
                      },
                      {
                        "type": "literal",
                        "value": "sandbox"
                      },
                      {
                        "type": "literal",
                        "value": "scope"
                      },
                      {
                        "type": "literal",
                        "value": "scoped"
                      },
                      {
                        "type": "literal",
                        "value": "scrolling"
                      },
                      {
                        "type": "literal",
                        "value": "seamless"
                      },
                      {
                        "type": "literal",
                        "value": "selected"
                      },
                      {
                        "type": "literal",
                        "value": "shape"
                      },
                      {
                        "type": "literal",
                        "value": "sizes"
                      },
                      {
                        "type": "literal",
                        "value": "span"
                      },
                      {
                        "type": "literal",
                        "value": "src"
                      },
                      {
                        "type": "literal",
                        "value": "srcDoc"
                      },
                      {
                        "type": "literal",
                        "value": "srcLang"
                      },
                      {
                        "type": "literal",
                        "value": "srcSet"
                      },
                      {
                        "type": "literal",
                        "value": "start"
                      },
                      {
                        "type": "literal",
                        "value": "step"
                      },
                      {
                        "type": "literal",
                        "value": "summary"
                      },
                      {
                        "type": "literal",
                        "value": "target"
                      },
                      {
                        "type": "literal",
                        "value": "type"
                      },
                      {
                        "type": "literal",
                        "value": "useMap"
                      },
                      {
                        "type": "literal",
                        "value": "value"
                      },
                      {
                        "type": "literal",
                        "value": "width"
                      },
                      {
                        "type": "literal",
                        "value": "wmode"
                      },
                      {
                        "type": "literal",
                        "value": "wrap"
                      },
                      {
                        "type": "literal",
                        "value": "defaultChecked"
                      },
                      {
                        "type": "literal",
                        "value": "defaultValue"
                      },
                      {
                        "type": "literal",
                        "value": "suppressContentEditableWarning"
                      },
                      {
                        "type": "literal",
                        "value": "suppressHydrationWarning"
                      },
                      {
                        "type": "literal",
                        "value": "accessKey"
                      },
                      {
                        "type": "literal",
                        "value": "className"
                      },
                      {
                        "type": "literal",
                        "value": "contentEditable"
                      },
                      {
                        "type": "literal",
                        "value": "contextMenu"
                      },
                      {
                        "type": "literal",
                        "value": "dir"
                      },
                      {
                        "type": "literal",
                        "value": "draggable"
                      },
                      {
                        "type": "literal",
                        "value": "hidden"
                      },
                      {
                        "type": "literal",
                        "value": "id"
                      },
                      {
                        "type": "literal",
                        "value": "lang"
                      },
                      {
                        "type": "literal",
                        "value": "slot"
                      },
                      {
                        "type": "literal",
                        "value": "spellCheck"
                      },
                      {
                        "type": "literal",
                        "value": "style"
                      },
                      {
                        "type": "literal",
                        "value": "tabIndex"
                      },
                      {
                        "type": "literal",
                        "value": "title"
                      },
                      {
                        "type": "literal",
                        "value": "translate"
                      },
                      {
                        "type": "literal",
                        "value": "radioGroup"
                      },
                      {
                        "type": "literal",
                        "value": "role"
                      },
                      {
                        "type": "literal",
                        "value": "about"
                      },
                      {
                        "type": "literal",
                        "value": "datatype"
                      },
                      {
                        "type": "literal",
                        "value": "inlist"
                      },
                      {
                        "type": "literal",
                        "value": "prefix"
                      },
                      {
                        "type": "literal",
                        "value": "property"
                      },
                      {
                        "type": "literal",
                        "value": "resource"
                      },
                      {
                        "type": "literal",
                        "value": "typeof"
                      },
                      {
                        "type": "literal",
                        "value": "vocab"
                      },
                      {
                        "type": "literal",
                        "value": "autoCapitalize"
                      },
                      {
                        "type": "literal",
                        "value": "autoCorrect"
                      },
                      {
                        "type": "literal",
                        "value": "autoSave"
                      },
                      {
                        "type": "literal",
                        "value": "color"
                      },
                      {
                        "type": "literal",
                        "value": "itemProp"
                      },
                      {
                        "type": "literal",
                        "value": "itemScope"
                      },
                      {
                        "type": "literal",
                        "value": "itemType"
                      },
                      {
                        "type": "literal",
                        "value": "itemID"
                      },
                      {
                        "type": "literal",
                        "value": "itemRef"
                      },
                      {
                        "type": "literal",
                        "value": "results"
                      },
                      {
                        "type": "literal",
                        "value": "security"
                      },
                      {
                        "type": "literal",
                        "value": "unselectable"
                      },
                      {
                        "type": "literal",
                        "value": "inputMode"
                      },
                      {
                        "type": "literal",
                        "value": "is"
                      },
                      {
                        "type": "literal",
                        "value": "aria-activedescendant"
                      },
                      {
                        "type": "literal",
                        "value": "aria-atomic"
                      },
                      {
                        "type": "literal",
                        "value": "aria-autocomplete"
                      },
                      {
                        "type": "literal",
                        "value": "aria-busy"
                      },
                      {
                        "type": "literal",
                        "value": "aria-checked"
                      },
                      {
                        "type": "literal",
                        "value": "aria-colcount"
                      },
                      {
                        "type": "literal",
                        "value": "aria-colindex"
                      },
                      {
                        "type": "literal",
                        "value": "aria-colspan"
                      },
                      {
                        "type": "literal",
                        "value": "aria-controls"
                      },
                      {
                        "type": "literal",
                        "value": "aria-current"
                      },
                      {
                        "type": "literal",
                        "value": "aria-describedby"
                      },
                      {
                        "type": "literal",
                        "value": "aria-details"
                      },
                      {
                        "type": "literal",
                        "value": "aria-disabled"
                      },
                      {
                        "type": "literal",
                        "value": "aria-dropeffect"
                      },
                      {
                        "type": "literal",
                        "value": "aria-errormessage"
                      },
                      {
                        "type": "literal",
                        "value": "aria-expanded"
                      },
                      {
                        "type": "literal",
                        "value": "aria-flowto"
                      },
                      {
                        "type": "literal",
                        "value": "aria-grabbed"
                      },
                      {
                        "type": "literal",
                        "value": "aria-haspopup"
                      },
                      {
                        "type": "literal",
                        "value": "aria-hidden"
                      },
                      {
                        "type": "literal",
                        "value": "aria-invalid"
                      },
                      {
                        "type": "literal",
                        "value": "aria-keyshortcuts"
                      },
                      {
                        "type": "literal",
                        "value": "aria-label"
                      },
                      {
                        "type": "literal",
                        "value": "aria-labelledby"
                      },
                      {
                        "type": "literal",
                        "value": "aria-level"
                      },
                      {
                        "type": "literal",
                        "value": "aria-live"
                      },
                      {
                        "type": "literal",
                        "value": "aria-modal"
                      },
                      {
                        "type": "literal",
                        "value": "aria-multiline"
                      },
                      {
                        "type": "literal",
                        "value": "aria-multiselectable"
                      },
                      {
                        "type": "literal",
                        "value": "aria-orientation"
                      },
                      {
                        "type": "literal",
                        "value": "aria-owns"
                      },
                      {
                        "type": "literal",
                        "value": "aria-placeholder"
                      },
                      {
                        "type": "literal",
                        "value": "aria-posinset"
                      },
                      {
                        "type": "literal",
                        "value": "aria-pressed"
                      },
                      {
                        "type": "literal",
                        "value": "aria-readonly"
                      },
                      {
                        "type": "literal",
                        "value": "aria-relevant"
                      },
                      {
                        "type": "literal",
                        "value": "aria-required"
                      },
                      {
                        "type": "literal",
                        "value": "aria-roledescription"
                      },
                      {
                        "type": "literal",
                        "value": "aria-rowcount"
                      },
                      {
                        "type": "literal",
                        "value": "aria-rowindex"
                      },
                      {
                        "type": "literal",
                        "value": "aria-rowspan"
                      },
                      {
                        "type": "literal",
                        "value": "aria-selected"
                      },
                      {
                        "type": "literal",
                        "value": "aria-setsize"
                      },
                      {
                        "type": "literal",
                        "value": "aria-sort"
                      },
                      {
                        "type": "literal",
                        "value": "aria-valuemax"
                      },
                      {
                        "type": "literal",
                        "value": "aria-valuemin"
                      },
                      {
                        "type": "literal",
                        "value": "aria-valuenow"
                      },
                      {
                        "type": "literal",
                        "value": "aria-valuetext"
                      },
                      {
                        "type": "literal",
                        "value": "children"
                      },
                      {
                        "type": "literal",
                        "value": "dangerouslySetInnerHTML"
                      },
                      {
                        "type": "literal",
                        "value": "onCopy"
                      },
                      {
                        "type": "literal",
                        "value": "onCopyCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onCut"
                      },
                      {
                        "type": "literal",
                        "value": "onCutCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPaste"
                      },
                      {
                        "type": "literal",
                        "value": "onPasteCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onCompositionEnd"
                      },
                      {
                        "type": "literal",
                        "value": "onCompositionEndCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onCompositionStart"
                      },
                      {
                        "type": "literal",
                        "value": "onCompositionStartCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onCompositionUpdate"
                      },
                      {
                        "type": "literal",
                        "value": "onCompositionUpdateCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onFocus"
                      },
                      {
                        "type": "literal",
                        "value": "onFocusCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onBlur"
                      },
                      {
                        "type": "literal",
                        "value": "onBlurCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onChange"
                      },
                      {
                        "type": "literal",
                        "value": "onChangeCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onBeforeInput"
                      },
                      {
                        "type": "literal",
                        "value": "onBeforeInputCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onInput"
                      },
                      {
                        "type": "literal",
                        "value": "onInputCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onReset"
                      },
                      {
                        "type": "literal",
                        "value": "onResetCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onSubmit"
                      },
                      {
                        "type": "literal",
                        "value": "onSubmitCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onInvalid"
                      },
                      {
                        "type": "literal",
                        "value": "onInvalidCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onLoad"
                      },
                      {
                        "type": "literal",
                        "value": "onLoadCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onError"
                      },
                      {
                        "type": "literal",
                        "value": "onErrorCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onKeyDown"
                      },
                      {
                        "type": "literal",
                        "value": "onKeyDownCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onKeyPress"
                      },
                      {
                        "type": "literal",
                        "value": "onKeyPressCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onKeyUp"
                      },
                      {
                        "type": "literal",
                        "value": "onKeyUpCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onAbort"
                      },
                      {
                        "type": "literal",
                        "value": "onAbortCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onCanPlay"
                      },
                      {
                        "type": "literal",
                        "value": "onCanPlayCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onCanPlayThrough"
                      },
                      {
                        "type": "literal",
                        "value": "onCanPlayThroughCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDurationChange"
                      },
                      {
                        "type": "literal",
                        "value": "onDurationChangeCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onEmptied"
                      },
                      {
                        "type": "literal",
                        "value": "onEmptiedCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onEncrypted"
                      },
                      {
                        "type": "literal",
                        "value": "onEncryptedCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onEnded"
                      },
                      {
                        "type": "literal",
                        "value": "onEndedCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onLoadedData"
                      },
                      {
                        "type": "literal",
                        "value": "onLoadedDataCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onLoadedMetadata"
                      },
                      {
                        "type": "literal",
                        "value": "onLoadedMetadataCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onLoadStart"
                      },
                      {
                        "type": "literal",
                        "value": "onLoadStartCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPause"
                      },
                      {
                        "type": "literal",
                        "value": "onPauseCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPlay"
                      },
                      {
                        "type": "literal",
                        "value": "onPlayCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPlaying"
                      },
                      {
                        "type": "literal",
                        "value": "onPlayingCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onProgress"
                      },
                      {
                        "type": "literal",
                        "value": "onProgressCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onRateChange"
                      },
                      {
                        "type": "literal",
                        "value": "onRateChangeCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onSeeked"
                      },
                      {
                        "type": "literal",
                        "value": "onSeekedCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onSeeking"
                      },
                      {
                        "type": "literal",
                        "value": "onSeekingCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onStalled"
                      },
                      {
                        "type": "literal",
                        "value": "onStalledCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onSuspend"
                      },
                      {
                        "type": "literal",
                        "value": "onSuspendCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onTimeUpdate"
                      },
                      {
                        "type": "literal",
                        "value": "onTimeUpdateCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onVolumeChange"
                      },
                      {
                        "type": "literal",
                        "value": "onVolumeChangeCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onWaiting"
                      },
                      {
                        "type": "literal",
                        "value": "onWaitingCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onAuxClick"
                      },
                      {
                        "type": "literal",
                        "value": "onAuxClickCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onClick"
                      },
                      {
                        "type": "literal",
                        "value": "onClickCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onContextMenu"
                      },
                      {
                        "type": "literal",
                        "value": "onContextMenuCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDoubleClick"
                      },
                      {
                        "type": "literal",
                        "value": "onDoubleClickCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDrag"
                      },
                      {
                        "type": "literal",
                        "value": "onDragCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDragEnd"
                      },
                      {
                        "type": "literal",
                        "value": "onDragEndCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDragEnter"
                      },
                      {
                        "type": "literal",
                        "value": "onDragEnterCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDragExit"
                      },
                      {
                        "type": "literal",
                        "value": "onDragExitCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDragLeave"
                      },
                      {
                        "type": "literal",
                        "value": "onDragLeaveCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDragOver"
                      },
                      {
                        "type": "literal",
                        "value": "onDragOverCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDragStart"
                      },
                      {
                        "type": "literal",
                        "value": "onDragStartCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onDrop"
                      },
                      {
                        "type": "literal",
                        "value": "onDropCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseDown"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseDownCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseEnter"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseLeave"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseMove"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseMoveCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseOut"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseOutCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseOver"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseOverCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseUp"
                      },
                      {
                        "type": "literal",
                        "value": "onMouseUpCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onSelect"
                      },
                      {
                        "type": "literal",
                        "value": "onSelectCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchCancel"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchCancelCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchEnd"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchEndCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchMove"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchMoveCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchStart"
                      },
                      {
                        "type": "literal",
                        "value": "onTouchStartCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerDown"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerDownCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerMove"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerMoveCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerUp"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerUpCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerCancel"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerCancelCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerEnter"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerEnterCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerLeave"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerLeaveCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerOver"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerOverCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerOut"
                      },
                      {
                        "type": "literal",
                        "value": "onPointerOutCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onGotPointerCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onGotPointerCaptureCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onLostPointerCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onLostPointerCaptureCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onScroll"
                      },
                      {
                        "type": "literal",
                        "value": "onScrollCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onWheel"
                      },
                      {
                        "type": "literal",
                        "value": "onWheelCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onAnimationStart"
                      },
                      {
                        "type": "literal",
                        "value": "onAnimationStartCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onAnimationEnd"
                      },
                      {
                        "type": "literal",
                        "value": "onAnimationEndCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onAnimationIteration"
                      },
                      {
                        "type": "literal",
                        "value": "onAnimationIterationCapture"
                      },
                      {
                        "type": "literal",
                        "value": "onTransitionEnd"
                      },
                      {
                        "type": "literal",
                        "value": "onTransitionEndCapture"
                      },
                      {
                        "type": "literal",
                        "value": "key"
                      },
                      {
                        "type": "literal",
                        "value": "loading"
                      },
                      {
                        "type": "literal",
                        "value": "basic"
                      },
                      {
                        "type": "literal",
                        "value": "active"
                      },
                      {
                        "type": "literal",
                        "value": "block"
                      },
                      {
                        "type": "literal",
                        "value": "icon"
                      },
                      {
                        "type": "literal",
                        "value": "htmlType"
                      },
                      {
                        "type": "literal",
                        "value": "prefixCls"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typedoc",
                "name": "Pick"
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "qualifiedName": "HTMLButtonElement",
                    "package": "typedoc",
                    "name": "HTMLButtonElement"
                  }
                ],
                "qualifiedName": "React.RefAttributes",
                "package": "@types/react",
                "name": "RefAttributes"
              }
            ]
          }
        ],
        "qualifiedName": "React.ForwardRefExoticComponent",
        "package": "@types/react",
        "name": "ForwardRefExoticComponent"
      }
    }
  ],
  "groups": [
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [3]
    },
    {
      "title": "Type aliases",
      "kind": 4194304,
      "children": [2, 1]
    },
    {
      "title": "Variables",
      "kind": 32,
      "children": [376]
    }
  ]
}
